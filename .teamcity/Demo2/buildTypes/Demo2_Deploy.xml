<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>infrastructure</name>
  <description>deploy to test web</description>
  <settings>
    <disabled-settings>
      <setting-ref ref="RUNNER_1" />
      <setting-ref ref="RUNNER_2" />
      <setting-ref ref="RUNNER_8" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_1" name="terraform" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[sudo yum -y install git;
sudo yum -y install unzip;
sudo yum -y install unzip;
# check if not exist
#if test !-f /usr/bin/terraform;
if [ ! -f /usr/bin/terraform ]; then
    wget https://releases.hashicorp.com/terraform/0.12.9/terraform_0.12.9_linux_amd64.zip;
    sudo unzip ./terraform_0.12.9_linux_amd64.zip -d /usr/bin/
    sudo rm terraform_0.12.9_linux_amd64.zip;
fi
terraform -v]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Create instances" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[if [ -d Demo2 ]; then
   sudo rm -R Demo2;
fi
git clone -b terraformInstances https://github.com/TarasKindrat/Demo2.git;
cd Demo2;
sudo terraform init;
sudo terraform fmt;
sudo terraform plan;
sudo terraform apply -auto-approve;]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="destroy" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[cd Demo2
sudo terraform destroy -auto-approve;]]></param>
          <param name="teamcity.step.mode" value="execute_if_failed" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_7" name="Check Docker version (local)" type="simpleRunner">
        <parameters>
          <param name="script.content" value="docker --version" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Check Docker version mongo-db" type="ssh-exec-runner">
        <parameters>
          <param name="jetbrains.buildServer.deployer.targetUrl" value="mongo-db" />
          <param name="jetbrains.buildServer.deployer.username" value="taras" />
          <param name="jetbrains.buildServer.sshexec.authMethod" value="CUSTOM_KEY" />
          <param name="jetbrains.buildServer.sshexec.command" value="docker --version" />
          <param name="jetbrains.buildServer.sshexec.keyFile" value="/home/taras/.ssh/id_rsa" />
          <param name="teamcity.step.mode" value="execute_always" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Check Docker version web" type="ssh-exec-runner">
        <parameters>
          <param name="jetbrains.buildServer.deployer.targetUrl" value="web" />
          <param name="jetbrains.buildServer.deployer.username" value="taras" />
          <param name="jetbrains.buildServer.sshexec.authMethod" value="CUSTOM_KEY" />
          <param name="jetbrains.buildServer.sshexec.command" value="docker --version" />
          <param name="jetbrains.buildServer.sshexec.keyFile" value="/home/taras/.ssh/id_rsa" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Demo2_HttpsGithubComTarasKindratDemo2gitRefsHeadsMaster_2" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

